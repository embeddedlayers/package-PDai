% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ps.R
\name{ps.llmNarrative}
\alias{ps.llmNarrative}
\title{Parallel or Sequential Processing of Files}
\usage{
ps.llmNarrative(
  process_key,
  resultFiles,
  processingId,
  con,
  use_background = FALSE
)
}
\arguments{
\item{process_key}{A function that processes individual keys in \code{resultFiles} using \code{processingId} and a database connection \code{con}.}

\item{resultFiles}{A named list of files where each name corresponds to a key that \code{process_key} will process.}

\item{processingId}{A unique identifier used in the processing function to tag or identify the process.}

\item{con}{A database connection object, typically a connection created via DBI.}

\item{use_background}{Logical, if TRUE, processing is done in parallel using multiple sessions; if FALSE, it is done sequentially.}
}
\value{
A list of results from applying \code{process_key} function to each file.
}
\description{
This function processes a set of files either in parallel or sequentially based on the \code{use_background} flag.
It uses a list of keys from the result files to determine the processing strategy. The process can be executed
in parallel using multiple workers or sequentially.
}
\examples{
\dontrun{
  # Define a processing function
  process_function <- function(key, files, id, con) {
    # hypothetical function to process files
    Sys.sleep(1)  # simulate processing time
    return(paste("Processed", key, "with ID", id))
  }

  # Example files list
  files_to_process <- list(file1 = "path/to/file1", file2 = "path/to/file2")

  # Processing ID and mock connection object
  process_id <- "12345"
  db_con <- NULL  # Assuming a real DBI connection object here

  # Run processing in background
  results <- ps.llmNarrative(process_function, files_to_process, process_id, db_con, TRUE)
  print(results)
}
}
\seealso{
\code{\link[future]{plan}}, \code{\link[future.apply]{future_lapply}}
}
